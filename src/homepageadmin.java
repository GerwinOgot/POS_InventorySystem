/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author GJ
 */

import java.awt.HeadlessException;
import java.sql.*;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.*;
import java.awt.print.PrinterException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.Locale;
import javax.swing.JOptionPane;

public class homepageadmin extends javax.swing.JFrame {

    /**
     * Creates new form homepageadmin
     */
    public homepageadmin() {
        initComponents();
        Connect();
        Fetch();
    }

    Connection con;
    PreparedStatement pst;
    ResultSet rs;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void Connect() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/choco_users", "root", "admin");
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(inventoryadmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @SuppressWarnings("unchecked")
    private void Fetch() {
        try {
            int a;
            pst = con.prepareStatement("SELECT * FROM inventory WHERE current_quantity >0");
            rs = pst.executeQuery();
            ResultSetMetaData rss = rs.getMetaData();
            a = rss.getColumnCount();

            DefaultTableModel df = (DefaultTableModel) prodtable.getModel();
            df.setRowCount(0);
            while (rs.next()) {
                Vector v2 = new Vector();
                for (int x = 1; x <= a; x++) {
                    v2.add(rs.getString("product_name"));
                }
                df.addRow(v2);
            }

        } catch (SQLException ex) {
            Logger.getLogger(inventoryadmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        transaction = new javax.swing.JButton();
        inventory = new javax.swing.JButton();
        sales = new javax.swing.JButton();
        sale = new javax.swing.JButton();
        home = new javax.swing.JButton();
        logout = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        balance = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        subtotaltext = new javax.swing.JTextField();
        vattext = new javax.swing.JTextField();
        totaltext = new javax.swing.JTextField();
        paymenttext = new javax.swing.JTextField();
        balancetext = new javax.swing.JTextField();
        calculator = new javax.swing.JPanel();
        one = new javax.swing.JButton();
        two = new javax.swing.JButton();
        three = new javax.swing.JButton();
        four = new javax.swing.JButton();
        five = new javax.swing.JButton();
        six = new javax.swing.JButton();
        seven = new javax.swing.JButton();
        eight = new javax.swing.JButton();
        nine = new javax.swing.JButton();
        doublezero = new javax.swing.JButton();
        zero = new javax.swing.JButton();
        dot = new javax.swing.JButton();
        del = new javax.swing.JButton();
        enter = new javax.swing.JButton();
        newtransaction = new javax.swing.JButton();
        removeproduct = new javax.swing.JButton();
        canceltransaction = new javax.swing.JButton();
        print = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        producttable = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        prodtable = new javax.swing.JTable();
        additem = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        area = new javax.swing.JTextArea();
        receipt = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(4, 12, 23));

        transaction.setBackground(new java.awt.Color(11, 44, 89));
        transaction.setFont(new java.awt.Font("Segoe UI Light", 1, 24)); // NOI18N
        transaction.setForeground(new java.awt.Color(255, 255, 255));
        transaction.setText("TRANSACTION");
        transaction.setBorder(null);

        inventory.setBackground(new java.awt.Color(11, 44, 89));
        inventory.setFont(new java.awt.Font("Segoe UI Light", 1, 24)); // NOI18N
        inventory.setForeground(new java.awt.Color(255, 255, 255));
        inventory.setText("INVENTORY");
        inventory.setBorder(null);
        inventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inventoryActionPerformed(evt);
            }
        });

        sales.setBackground(new java.awt.Color(11, 44, 89));
        sales.setFont(new java.awt.Font("Segoe UI Light", 1, 24)); // NOI18N
        sales.setForeground(new java.awt.Color(255, 255, 255));
        sales.setText("ACCESS");
        sales.setBorder(null);
        sales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salesActionPerformed(evt);
            }
        });

        sale.setBackground(new java.awt.Color(11, 44, 89));
        sale.setFont(new java.awt.Font("Segoe UI Light", 1, 24)); // NOI18N
        sale.setForeground(new java.awt.Color(255, 255, 255));
        sale.setText("SALES");
        sale.setBorder(null);
        sale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saleActionPerformed(evt);
            }
        });

        home.setBackground(new java.awt.Color(4, 12, 23));
        home.setForeground(new java.awt.Color(4, 12, 23));
        home.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/1 (1).jpg"))); // NOI18N
        home.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeActionPerformed(evt);
            }
        });

        logout.setBackground(new java.awt.Color(4, 12, 23));
        logout.setForeground(new java.awt.Color(255, 255, 255));
        logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/2.jpg"))); // NOI18N
        logout.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(sales, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sale, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inventory, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(transaction, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 28, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(home, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addComponent(transaction, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(inventory, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(sale, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(sales, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(home, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(65, 93, 124));

        balance.setBackground(new java.awt.Color(217, 217, 217));

        jLabel1.setFont(new java.awt.Font("Segoe UI Historic", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(4, 12, 23));
        jLabel1.setText("VAT:");

        jLabel2.setFont(new java.awt.Font("Segoe UI Historic", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(4, 12, 23));
        jLabel2.setText("SUBTOTAL:");

        jLabel3.setFont(new java.awt.Font("Segoe UI Historic", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(4, 12, 23));
        jLabel3.setText("PAYMENT:");

        jLabel4.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(4, 12, 23));
        jLabel4.setText("BALANCE:");

        jLabel5.setFont(new java.awt.Font("Segoe UI Historic", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(4, 12, 23));
        jLabel5.setText("TOTAL:");

        subtotaltext.setEditable(false);
        subtotaltext.setBackground(new java.awt.Color(217, 217, 217));
        subtotaltext.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        subtotaltext.setForeground(new java.awt.Color(4, 12, 23));
        subtotaltext.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        vattext.setEditable(false);
        vattext.setBackground(new java.awt.Color(217, 217, 217));
        vattext.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        vattext.setForeground(new java.awt.Color(4, 12, 23));
        vattext.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        totaltext.setEditable(false);
        totaltext.setBackground(new java.awt.Color(217, 217, 217));
        totaltext.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        totaltext.setForeground(new java.awt.Color(4, 12, 23));
        totaltext.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        totaltext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totaltextActionPerformed(evt);
            }
        });

        paymenttext.setBackground(new java.awt.Color(217, 217, 217));
        paymenttext.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        paymenttext.setForeground(new java.awt.Color(4, 12, 23));
        paymenttext.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        paymenttext.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        paymenttext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymenttextActionPerformed(evt);
            }
        });

        balancetext.setEditable(false);
        balancetext.setBackground(new java.awt.Color(217, 217, 217));
        balancetext.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        balancetext.setForeground(new java.awt.Color(4, 12, 23));
        balancetext.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout balanceLayout = new javax.swing.GroupLayout(balance);
        balance.setLayout(balanceLayout);
        balanceLayout.setHorizontalGroup(
            balanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(balanceLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(balanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(balanceLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(balanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(subtotaltext, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(vattext, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(balanceLayout.createSequentialGroup()
                        .addGroup(balanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(balanceLayout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(totaltext, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(balanceLayout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(balancetext, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(balanceLayout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(paymenttext, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18))
            .addGroup(balanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(balanceLayout.createSequentialGroup()
                    .addGap(16, 16, 16)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(123, Short.MAX_VALUE)))
        );
        balanceLayout.setVerticalGroup(
            balanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(balanceLayout.createSequentialGroup()
                .addGroup(balanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(balanceLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, balanceLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(subtotaltext, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(vattext, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)))
                .addGroup(balanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totaltext, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(balanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paymenttext, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(balanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(balancetext, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(balanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(balanceLayout.createSequentialGroup()
                    .addGap(16, 16, 16)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(230, Short.MAX_VALUE)))
        );

        calculator.setBackground(new java.awt.Color(217, 217, 217));

        one.setBackground(new java.awt.Color(65, 103, 137));
        one.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        one.setForeground(new java.awt.Color(255, 255, 255));
        one.setText("1");
        one.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        one.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneActionPerformed(evt);
            }
        });

        two.setBackground(new java.awt.Color(65, 103, 137));
        two.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        two.setForeground(new java.awt.Color(255, 255, 255));
        two.setText("2");
        two.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        two.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twoActionPerformed(evt);
            }
        });

        three.setBackground(new java.awt.Color(65, 103, 137));
        three.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        three.setForeground(new java.awt.Color(255, 255, 255));
        three.setText("3");
        three.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        three.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threeActionPerformed(evt);
            }
        });

        four.setBackground(new java.awt.Color(65, 103, 137));
        four.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        four.setForeground(new java.awt.Color(255, 255, 255));
        four.setText("4");
        four.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        four.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fourActionPerformed(evt);
            }
        });

        five.setBackground(new java.awt.Color(65, 103, 137));
        five.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        five.setForeground(new java.awt.Color(255, 255, 255));
        five.setText("5");
        five.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        five.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiveActionPerformed(evt);
            }
        });

        six.setBackground(new java.awt.Color(65, 103, 137));
        six.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        six.setForeground(new java.awt.Color(255, 255, 255));
        six.setText("6");
        six.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        six.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sixActionPerformed(evt);
            }
        });

        seven.setBackground(new java.awt.Color(65, 103, 137));
        seven.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        seven.setForeground(new java.awt.Color(255, 255, 255));
        seven.setText("7");
        seven.setToolTipText("");
        seven.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        seven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sevenActionPerformed(evt);
            }
        });

        eight.setBackground(new java.awt.Color(65, 103, 137));
        eight.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        eight.setForeground(new java.awt.Color(255, 255, 255));
        eight.setText("8");
        eight.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        eight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eightActionPerformed(evt);
            }
        });

        nine.setBackground(new java.awt.Color(65, 103, 137));
        nine.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        nine.setForeground(new java.awt.Color(255, 255, 255));
        nine.setText("9");
        nine.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        nine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nineActionPerformed(evt);
            }
        });

        doublezero.setBackground(new java.awt.Color(65, 103, 137));
        doublezero.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        doublezero.setForeground(new java.awt.Color(255, 255, 255));
        doublezero.setText("00");
        doublezero.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        doublezero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doublezeroActionPerformed(evt);
            }
        });

        zero.setBackground(new java.awt.Color(65, 103, 137));
        zero.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        zero.setForeground(new java.awt.Color(255, 255, 255));
        zero.setText("0");
        zero.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        zero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zeroActionPerformed(evt);
            }
        });

        dot.setBackground(new java.awt.Color(65, 103, 137));
        dot.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        dot.setForeground(new java.awt.Color(255, 255, 255));
        dot.setText(".");
        dot.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        dot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dotActionPerformed(evt);
            }
        });

        del.setBackground(new java.awt.Color(65, 103, 137));
        del.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        del.setForeground(new java.awt.Color(255, 255, 255));
        del.setText("DEL");
        del.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delActionPerformed(evt);
            }
        });

        enter.setBackground(new java.awt.Color(65, 103, 137));
        enter.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        enter.setForeground(new java.awt.Color(255, 255, 255));
        enter.setText("ENTER");
        enter.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        enter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout calculatorLayout = new javax.swing.GroupLayout(calculator);
        calculator.setLayout(calculatorLayout);
        calculatorLayout.setHorizontalGroup(
            calculatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(calculatorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(calculatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(calculatorLayout.createSequentialGroup()
                        .addComponent(one, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(two, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(three, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(calculatorLayout.createSequentialGroup()
                        .addComponent(four, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(five, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(six, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(calculatorLayout.createSequentialGroup()
                        .addComponent(seven, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eight, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(nine, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(calculatorLayout.createSequentialGroup()
                        .addComponent(dot, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(zero, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(doublezero, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(calculatorLayout.createSequentialGroup()
                        .addComponent(del, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(enter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        calculatorLayout.setVerticalGroup(
            calculatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(calculatorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(calculatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(one, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(two, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(three, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(calculatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(four, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(five, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(six, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(calculatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seven, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eight, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nine, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(calculatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dot, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zero, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(doublezero, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(calculatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(del, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enter, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        newtransaction.setBackground(new java.awt.Color(11, 44, 89));
        newtransaction.setFont(new java.awt.Font("Segoe UI Light", 1, 10)); // NOI18N
        newtransaction.setForeground(new java.awt.Color(255, 255, 255));
        newtransaction.setText("NEW TRANSACTION");
        newtransaction.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        newtransaction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newtransactionActionPerformed(evt);
            }
        });

        removeproduct.setBackground(new java.awt.Color(11, 44, 89));
        removeproduct.setFont(new java.awt.Font("Segoe UI Light", 1, 10)); // NOI18N
        removeproduct.setForeground(new java.awt.Color(255, 255, 255));
        removeproduct.setText("REMOVE PRODUCT");
        removeproduct.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        removeproduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeproductActionPerformed(evt);
            }
        });

        canceltransaction.setBackground(new java.awt.Color(11, 44, 89));
        canceltransaction.setFont(new java.awt.Font("Segoe UI Light", 1, 10)); // NOI18N
        canceltransaction.setForeground(new java.awt.Color(255, 255, 255));
        canceltransaction.setText("CANCEL TRANSACTION");
        canceltransaction.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        canceltransaction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                canceltransactionActionPerformed(evt);
            }
        });

        print.setBackground(new java.awt.Color(11, 44, 89));
        print.setFont(new java.awt.Font("Segoe UI Light", 1, 10)); // NOI18N
        print.setForeground(new java.awt.Color(255, 255, 255));
        print.setText("PRINT");
        print.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        print.setContentAreaFilled(false);
        print.setEnabled(false);
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });

        producttable.setBackground(new java.awt.Color(204, 204, 204));
        producttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Quantity", "Unit Cost"
            }
        ));
        producttable.setGridColor(new java.awt.Color(11, 44, 89));
        producttable.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                producttableAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(producttable);

        prodtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "PRODUCT NAME"
            }
        ));
        prodtable.setMaximumSize(new java.awt.Dimension(2147483647, 160));
        prodtable.setMinimumSize(new java.awt.Dimension(15, 160));
        prodtable.setPreferredSize(new java.awt.Dimension(75, 160));
        prodtable.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                prodtableAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane4.setViewportView(prodtable);

        additem.setBackground(new java.awt.Color(11, 44, 89));
        additem.setFont(new java.awt.Font("Segoe UI Light", 1, 10)); // NOI18N
        additem.setForeground(new java.awt.Color(255, 255, 255));
        additem.setText("ADD ITEM");
        additem.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        additem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                additemActionPerformed(evt);
            }
        });

        area.setColumns(20);
        area.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        area.setRows(5);
        area.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        area.setEnabled(false);
        jScrollPane2.setViewportView(area);

        receipt.setBackground(new java.awt.Color(11, 44, 89));
        receipt.setFont(new java.awt.Font("Segoe UI Light", 1, 10)); // NOI18N
        receipt.setForeground(new java.awt.Color(255, 255, 255));
        receipt.setText("GENERATE RECEIPT");
        receipt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        receipt.setContentAreaFilled(false);
        receipt.setEnabled(false);
        receipt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiptActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(newtransaction, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeproduct, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(canceltransaction, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(print, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(balance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(calculator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(additem, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(receipt, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(additem, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(balance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(calculator, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(canceltransaction, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(removeproduct, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newtransaction, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(print, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(receipt, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        balance.getAccessibleContext().setAccessibleName("");
        calculator.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
//calculates item inside the table

    public void ItemCost() {
        double sum = 0;
        for (int i = 0; i < producttable.getRowCount(); i++) {
            sum = sum + Double.parseDouble(producttable.getValueAt(i, 2).toString());
        }
        subtotaltext.setText(Double.toString(sum));
        double ctotal = Double.parseDouble(subtotaltext.getText());
        double cvat = (ctotal * 3.9) / 100;
        String ivattotal = String.format("Php %.2f", cvat);
        vattext.setText(ivattotal);

        String subtotal = String.format("Php %.2f", ctotal);
        subtotaltext.setText(subtotal);

        String itotal = String.format("Php %.2f", ctotal + cvat);
        totaltext.setText(itotal);
    }
    //calculates the balance/change of the customer   

    public void Balance() {
        double sum = 0;
        double vat = 3.9;
        double payment = Double.parseDouble(paymenttext.getText());
        for (int i = 0; i < producttable.getRowCount(); i++) {
            sum = sum + Double.parseDouble(producttable.getValueAt(i, 2).toString());
        }
        double cvat = (sum * 3.9) / 100;
        double fpayment = (payment - (sum + cvat));
        String bal = String.format("Php %.2f", fpayment);
        balancetext.setText(bal);
    }

    public void RemoveInv() {
            for(int i = 0; i<producttable.getRowCount();i++){
               String prodname;
               int prodquan;
               prodname = producttable.getValueAt(i, 0).toString();
               prodquan = Integer.parseInt(producttable.getValueAt(i, 1).toString());

               try{
                pst = con.prepareStatement("UPDATE inventory SET current_quantity = (current_quantity - ?) WHERE product_name = ?");
                pst.setInt(1,prodquan);    
                pst.setString(2,prodname);
                pst.executeUpdate();
                
               }
               catch (SQLException ex) {

                Logger.getLogger(inventoryadmin.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            Fetch();
            InventToSale();
        
    }

    public void InventToSale() {
        DefaultTableModel model = (DefaultTableModel) producttable.getModel();

        try {
            int T_ID = 0;
            pst = con.prepareStatement("SELECT Transaction_ID FROM sales ORDER BY Transaction_ID DESC LIMIT 1");
            rs = pst.executeQuery();
            if (!rs.next()) {
                T_ID = 1;
            } else {
                String Tran_ID = rs.getString("Transaction_ID");
                T_ID = Integer.parseInt(Tran_ID) + 1;
            }

            for (int i = 0; i < model.getRowCount(); i++) {
                String Name = model.getValueAt(i, 0).toString();
                String Quans = model.getValueAt(i, 1).toString();
                String prices = model.getValueAt(i, 2).toString();
                int Quan = Integer.parseInt(Quans);
                int price = Integer.parseInt(prices);
                LocalDate today = LocalDate.now(ZoneId.systemDefault());
                String date = today.toString();

                pst = con.prepareStatement("INSERT INTO sales (Transaction_ID, Product_Name, Product_Quantity, Product_Price, Date_Purchased) VALUES (?, ?, ?, ?, ?)");

                pst.setInt(1, T_ID);
                pst.setString(2, Name);
                pst.setInt(3, Quan);
                pst.setInt(4, price);
                pst.setString(5, date);

                int k = pst.executeUpdate();
            }
        } catch (HeadlessException | SQLException e) {
        }
    }

    public void ReceiptItem() {
        String prodname = null;
        int prodquan = 0;
        int prodcost = 0;
        for (int i = 0; i < producttable.getRowCount(); i++) {

            prodname = producttable.getValueAt(i, 0).toString();
            prodquan = Integer.parseInt(producttable.getValueAt(i, 1).toString());
            prodcost = Integer.parseInt(producttable.getValueAt(i, 2).toString());
            
            area.setText(area.getText() +prodquan + "  " + prodname + "  " + prodcost + "\n");
        }
       
    }
      public void DisabledBtn(){
        removeproduct.setEnabled(false);
        removeproduct.setContentAreaFilled(false);
        newtransaction.setEnabled(false);
        newtransaction.setContentAreaFilled(false);
        canceltransaction.setEnabled(false);
        canceltransaction.setContentAreaFilled(false);
        additem.setEnabled(false);
        additem.setContentAreaFilled(false);    
        receipt.setEnabled(false);
        receipt.setContentAreaFilled(false);
        
        //numbers
        one.setEnabled(false);
        one.setContentAreaFilled(false);
        two.setEnabled(false);
        two.setContentAreaFilled(false);
        three.setEnabled(false);
        three.setContentAreaFilled(false);
        four.setEnabled(false);
        four.setContentAreaFilled(false);
        five.setEnabled(false);
        five.setContentAreaFilled(false);
        six.setEnabled(false);
        six.setContentAreaFilled(false);
        seven.setEnabled(false);
        seven.setContentAreaFilled(false);
        eight.setEnabled(false);
        eight.setContentAreaFilled(false);
        nine.setEnabled(false);
        nine.setContentAreaFilled(false);
        zero.setEnabled(false);
        zero.setContentAreaFilled(false);
        dot.setEnabled(false);
        dot.setContentAreaFilled(false);
        doublezero.setEnabled(false);
        doublezero.setContentAreaFilled(false);
        del.setEnabled(false);
        del.setContentAreaFilled(false);
        enter.setEnabled(false);
        enter.setContentAreaFilled(false);
        
        paymenttext.setEnabled(false);
      }
      public void EnabledBtn()
      {
        removeproduct.setEnabled(true);
        removeproduct.setContentAreaFilled(true);
        newtransaction.setEnabled(true);
        newtransaction.setContentAreaFilled(true);
        canceltransaction.setEnabled(true);
        canceltransaction.setContentAreaFilled(true);
        additem.setEnabled(true);
        additem.setContentAreaFilled(true);
        
        //numbers
        one.setEnabled(true);
        one.setContentAreaFilled(true);
        two.setEnabled(true);
        two.setContentAreaFilled(true);
        three.setEnabled(true);
        three.setContentAreaFilled(true);
        four.setEnabled(true);
        four.setContentAreaFilled(true);
        five.setEnabled(true);
        five.setContentAreaFilled(true);
        six.setEnabled(true);
        six.setContentAreaFilled(true);
        seven.setEnabled(true);
        seven.setContentAreaFilled(true);
        eight.setEnabled(true);
        eight.setContentAreaFilled(true);
        nine.setEnabled(true);
        nine.setContentAreaFilled(true);
        zero.setEnabled(true);
        zero.setContentAreaFilled(true);
        dot.setEnabled(true);
        dot.setContentAreaFilled(true);
        doublezero.setEnabled(true);
        doublezero.setContentAreaFilled(true);
        del.setEnabled(true);
        del.setContentAreaFilled(true);
        enter.setEnabled(true);
        enter.setContentAreaFilled(true);
        
        paymenttext.setEnabled(true);
      }


    private void removeproductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeproductActionPerformed
        DefaultTableModel model = (DefaultTableModel) producttable.getModel();
        int removeitem = producttable.getSelectedRow();
        if (removeitem >= 0) {
            model.removeRow(removeitem);
        }
            int count= model.getRowCount(); 
            if (count <= 0){
                subtotaltext.setText("");
                vattext.setText("");
                totaltext.setText("");
                paymenttext.setText("");
                balancetext.setText("");
            }
            else{
                ItemCost();
                paymenttext.setText("");
                balancetext.setText("");
            }
            print.setEnabled(false);
            print.setContentAreaFilled(false);
            receipt.setEnabled(false);
            receipt.setContentAreaFilled(false); 
            
    }//GEN-LAST:event_removeproductActionPerformed

    private void canceltransactionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_canceltransactionActionPerformed
        DefaultTableModel model = (DefaultTableModel) producttable.getModel();
        model.setRowCount(0);
        subtotaltext.setText("");
        vattext.setText("");
        totaltext.setText("");
        paymenttext.setText("");
        balancetext.setText("");
        print.setEnabled(false);
        print.setContentAreaFilled(false);
        receipt.setEnabled(false);
        receipt.setContentAreaFilled(false); 
    }//GEN-LAST:event_canceltransactionActionPerformed

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
     
         newtransaction.setEnabled(true);
         newtransaction.setContentAreaFilled(true);
         
        try {
            boolean print =  area.print();
            if (!print) {
                JOptionPane.showMessageDialog(null, "Unable to Print!!!");

            }
        } catch (PrinterException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
            ex.printStackTrace();
        }
    }//GEN-LAST:event_printActionPerformed

    private void oneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneActionPerformed
        String enternum = paymenttext.getText();
        if (enternum == "") {
            paymenttext.setText(one.getText());
        } else {
            enternum = paymenttext.getText() + one.getText();
            paymenttext.setText(enternum);
        }
    }//GEN-LAST:event_oneActionPerformed

    private void homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeActionPerformed
        this.dispose();
        Homepage p = new Homepage();
        p.setVisible(true);
    }//GEN-LAST:event_homeActionPerformed

    private void inventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inventoryActionPerformed
        this.dispose();
        inventoryadmin b = new inventoryadmin();
        b.setVisible(true);
    }//GEN-LAST:event_inventoryActionPerformed

    private void salesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salesActionPerformed
        this.dispose();
        accessadmin a = new accessadmin();
        a.setVisible(true);
    }//GEN-LAST:event_salesActionPerformed

    private void saleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saleActionPerformed
        this.dispose();
        salesadmin s = new salesadmin();
        s.setVisible(true);
    }//GEN-LAST:event_saleActionPerformed

    private void twoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twoActionPerformed
        String enternum = paymenttext.getText();
        if (enternum == "") {
            paymenttext.setText(two.getText());
        } else {
            enternum = paymenttext.getText() + two.getText();
            paymenttext.setText(enternum);
        }
    }//GEN-LAST:event_twoActionPerformed

    private void threeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threeActionPerformed
        String enternum = paymenttext.getText();
        if (enternum == "") {
            paymenttext.setText(three.getText());
        } else {
            enternum = paymenttext.getText() + three.getText();
            paymenttext.setText(enternum);
        }
    }//GEN-LAST:event_threeActionPerformed

    private void fourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fourActionPerformed
        String enternum = paymenttext.getText();
        if (enternum == "") {
            paymenttext.setText(four.getText());
        } else {
            enternum = paymenttext.getText() + four.getText();
            paymenttext.setText(enternum);
        }
    }//GEN-LAST:event_fourActionPerformed

    private void fiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiveActionPerformed
        String enternum = paymenttext.getText();
        if (enternum == "") {
            paymenttext.setText(five.getText());
        } else {
            enternum = paymenttext.getText() + five.getText();
            paymenttext.setText(enternum);
        }
    }//GEN-LAST:event_fiveActionPerformed

    private void sixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sixActionPerformed
        String enternum = paymenttext.getText();
        if (enternum == "") {
            paymenttext.setText(six.getText());
        } else {
            enternum = paymenttext.getText() + six.getText();
            paymenttext.setText(enternum);
        }
    }//GEN-LAST:event_sixActionPerformed

    private void sevenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sevenActionPerformed
        String enternum = paymenttext.getText();
        if (enternum == "") {
            paymenttext.setText(seven.getText());
        } else {
            enternum = paymenttext.getText() + seven.getText();
            paymenttext.setText(enternum);
        }
    }//GEN-LAST:event_sevenActionPerformed

    private void eightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eightActionPerformed
        String enternum = paymenttext.getText();
        if (enternum == "") {
            paymenttext.setText(eight.getText());
        } else {
            enternum = paymenttext.getText() + eight.getText();
            paymenttext.setText(enternum);
        }
    }//GEN-LAST:event_eightActionPerformed

    private void nineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nineActionPerformed
        String enternum = paymenttext.getText();
        if (enternum == "") {
            paymenttext.setText(nine.getText());
        } else {
            enternum = paymenttext.getText() + nine.getText();
            paymenttext.setText(enternum);
        }
    }//GEN-LAST:event_nineActionPerformed

    private void dotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dotActionPerformed

        if (!paymenttext.getText().contains(".")) {
            paymenttext.setText(paymenttext.getText() + dot.getText());
        }
    }//GEN-LAST:event_dotActionPerformed

    private void zeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zeroActionPerformed
        String enternum = paymenttext.getText();
        if (enternum == "") {
            paymenttext.setText(zero.getText());
        } else {
            enternum = paymenttext.getText() + zero.getText();
            paymenttext.setText(enternum);
        }
    }//GEN-LAST:event_zeroActionPerformed

    private void doublezeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doublezeroActionPerformed
        String enternum = paymenttext.getText();
        if (enternum == "") {
            paymenttext.setText(doublezero.getText());
        } else {
            enternum = paymenttext.getText() + doublezero.getText();
            paymenttext.setText(enternum);
        }
    }//GEN-LAST:event_doublezeroActionPerformed

    private void paymenttextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymenttextActionPerformed

    }//GEN-LAST:event_paymenttextActionPerformed

    private void delActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delActionPerformed
        paymenttext.setText("");
        balancetext.setText("");
    }//GEN-LAST:event_delActionPerformed

    private void newtransactionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newtransactionActionPerformed
       DefaultTableModel model = (DefaultTableModel)producttable.getModel();
        model.setRowCount(0);
        subtotaltext.setText("");
        vattext.setText("");
        totaltext.setText("");
        paymenttext.setText("");
        balancetext.setText("");
        additem.setEnabled(true);
        additem.setContentAreaFilled(true);
        area.setText("");
        EnabledBtn();
        print.setEnabled(false);
        print.setContentAreaFilled(false);
        receipt.setEnabled(false);
        receipt.setContentAreaFilled(false); 
        
    }//GEN-LAST:event_newtransactionActionPerformed

    private void enterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterActionPerformed
           
        String subtotal = subtotaltext.getText();
        double payments = 0;
        String payment = paymenttext.getText();
        if (payment == null || "".equals(payment)) {
        } else {
            payments = Double.parseDouble(payment);
        }
        double tots = 0;
        double vat = 3.9;
        for (int i = 0; i < producttable.getRowCount(); i++) {
            tots = tots + Double.parseDouble(producttable.getValueAt(i, 2).toString());
        }
        
        if (subtotal == null || "".equals(subtotal)) {
            JOptionPane.showMessageDialog(null, "Add Product First");
            paymenttext.setText("");
        } 
        else if ("".equals(payment) || payment == null || payments < tots) {
            JOptionPane.showMessageDialog(null, "Enter Right Amount");
            paymenttext.setText("");
            balancetext.setText("");
        }
        else {
            payment = paymenttext.getText();
            if (payment == null || "".equals(payment)) {
            } else {
                Balance();
                receipt.setEnabled(true);
                receipt.setContentAreaFilled(true); 
            }
        }
    }//GEN-LAST:event_enterActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        int result = JOptionPane.showConfirmDialog(null, "Sure? You want to exit?", "Swing Tester",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE);
        if (result == JOptionPane.YES_OPTION) {
            this.dispose();
            LOGIN l = new LOGIN();
            l.show();
        } else if (result == JOptionPane.NO_OPTION) {
            this.show();
        }
    }//GEN-LAST:event_logoutActionPerformed

    private void producttableAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_producttableAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_producttableAncestorAdded

    private void prodtableAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_prodtableAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_prodtableAncestorAdded

    private void additemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_additemActionPerformed
       TableModel m = prodtable.getModel();
        int[] indexs = prodtable.getSelectedRows();
        if (indexs.length == 0) {
            JOptionPane.showMessageDialog(null, "Choose Product First");
        }
        else{
            Object[] rows = new Object[3];
            DefaultTableModel model = (DefaultTableModel) producttable.getModel();
            inventoryadmin inventory = new inventoryadmin();
            TableModel m1 = inventory.producttable1.getModel();
            for (int i = 0; i < indexs.length; i++) {
                rows[0] = m.getValueAt(indexs[i], 0);
                rows[1] = "1";
                rows[2] = m1.getValueAt(indexs[i], 5);
                model.addRow(rows);
            }
            ItemCost();
            print.setEnabled(false);
            print.setContentAreaFilled(false);
            receipt.setEnabled(false);
            receipt.setContentAreaFilled(false);
            paymenttext.setText("");
            balancetext.setText("");
        }
    }//GEN-LAST:event_additemActionPerformed

    private void totaltextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totaltextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totaltextActionPerformed

    private void receiptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiptActionPerformed
    int T_ID = 0;
        try {
                pst = con.prepareStatement("SELECT Transaction_ID FROM sales ORDER BY Transaction_ID DESC LIMIT 1");
                rs = pst.executeQuery();
                    if (!rs.next()){
                        T_ID = 1;
                    }
                    else{
                        String Tran_ID = rs.getString("Transaction_ID");
                        T_ID = Integer.parseInt(Tran_ID) + 1;
                    }
            } 
            catch (HeadlessException | SQLException e) {
            }
        
        area.setText("------------------------------------\n");
        area.setText(area.getText() + "The Chocolate Farm\n");
        area.setText(area.getText() + "------------------------------------\n");

        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd      HH:mm");
        LocalDateTime now = LocalDateTime.now();
        
        area.setText(area.getText() + "Transaction ID: " + T_ID + "\n");
        area.setText(area.getText() + now + "\n");
        area.setText(area.getText() + "------------------------------------\n");
        area.setText(area.getText() + "Products\n");
        ReceiptItem();
        area.setText(area.getText() + "------------------------------------\n");
        area.setText(area.getText() + "Subtotal: " + subtotaltext.getText() + "\n");
        area.setText(area.getText() + "Vat: " + vattext.getText() + "\n");
        area.setText(area.getText() + "Total: " + totaltext.getText() + "\n");
        area.setText(area.getText() + "------------------------------------\n");
        area.setText(area.getText() + "Payment received: " + paymenttext.getText() + "\n");
        area.setText(area.getText() + "------------------------------------\n");
        area.setText(area.getText() + "Change: " + balancetext.getText() + "\n");
        area.setText(area.getText() + "------------------------------------\n");
        RemoveInv(); 
        DisabledBtn();
        print.setEnabled(true);
        print.setContentAreaFilled(true);
    }//GEN-LAST:event_receiptActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(homepageadmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(homepageadmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(homepageadmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(homepageadmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new homepageadmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton additem;
    private javax.swing.JTextArea area;
    private javax.swing.JPanel balance;
    private javax.swing.JTextField balancetext;
    private javax.swing.JPanel calculator;
    private javax.swing.JButton canceltransaction;
    private javax.swing.JButton del;
    private javax.swing.JButton dot;
    private javax.swing.JButton doublezero;
    private javax.swing.JButton eight;
    private javax.swing.JButton enter;
    private javax.swing.JButton five;
    private javax.swing.JButton four;
    private javax.swing.JButton home;
    private javax.swing.JButton inventory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton logout;
    private javax.swing.JButton newtransaction;
    private javax.swing.JButton nine;
    private javax.swing.JButton one;
    private javax.swing.JTextField paymenttext;
    private javax.swing.JButton print;
    private javax.swing.JTable prodtable;
    private javax.swing.JTable producttable;
    private javax.swing.JButton receipt;
    private javax.swing.JButton removeproduct;
    private javax.swing.JButton sale;
    private javax.swing.JButton sales;
    private javax.swing.JButton seven;
    private javax.swing.JButton six;
    private javax.swing.JTextField subtotaltext;
    private javax.swing.JButton three;
    private javax.swing.JTextField totaltext;
    private javax.swing.JButton transaction;
    private javax.swing.JButton two;
    private javax.swing.JTextField vattext;
    private javax.swing.JButton zero;
    // End of variables declaration//GEN-END:variables
}
